server {
    listen       80;
    server_name  <dyndns-name>;
    root   /usr/share/nginx/html;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    server_tokens off;

    location /.well-known/acme-challenge {
                root   /usr/share/nginx/html/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen       443 ssl;
    server_name  <dyndns-name>;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/<dyndns-name>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<dyndns-name>/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root   /usr/share/nginx/html;

    location /.well-known/acme-challenge {
                root   <path>/nginx/certbot;
    }
 
    location / {
        return 403;
    }

    location /grafana/ {
        #################################### Server ####################################
        # Aenderungen in grafana.ini 
        #[server]
        # domain = <grafana server name>
        # enforce_domain = false
        # root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
        # serve_from_sub_path = true

         proxy_pass http://localhost:3000/grafana/;
    }

    location /openhab/ {
         return 301 https://openhabproxy.<dyndns-name>/;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

